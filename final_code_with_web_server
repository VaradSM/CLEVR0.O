#include <ESP8266WiFi.h>
int h = 0;
const char* ssid = "Mr.A";
const char* password = "ayan1999";
WiFiServer server(80);
int ir1 = 9, ir2 = 13, ir3 = 12, m1a = 16, m1b = 5, m2a = 4, m2b = 2;
void setup() 
{
  Serial.begin(115200);
  pinMode(ir1, INPUT);
  pinMode(ir2, INPUT);
  pinMode(ir3, INPUT);
  pinMode(m1a, OUTPUT);
  pinMode(m1b, OUTPUT);
  pinMode(m2a, OUTPUT);
  pinMode(m2b, OUTPUT);
  digitalWrite(m1a, LOW);
  digitalWrite(m1b, LOW);
  digitalWrite(m2b, LOW);
  digitalWrite(m2a, LOW);
    // Connect to WiFi network
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
 
  WiFi.begin(ssid, password);
 
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.println("WiFi connected");
 
  // Start the server
  server.begin();
  Serial.println("Server started");
 
  // Print the IP address
  Serial.print("Use this URL to connect: ");
  Serial.print("http://");
  Serial.print(WiFi.localIP());
  Serial.println("/");
}
void loop() 
{
  // Check if a client has connected
  WiFiClient client = server.available();
  if (!client) {
    return;
  }
 
  // Wait until the client sends some data
  Serial.println("new client");
  while(!client.available()){
    delay(1);
  }
 
  // Read the first line of the request
  String request = client.readStringUntil('\r');
  Serial.println(request);
  client.flush();
 
  // Match the request
 
  int value = LOW;
  if (request.indexOf("/j1") != -1)
  { 
    Serial.println("1");
    if (h < 1)
      {Serial.println("a");junction(1 - h);}
    else
    {
      turn();
      junction(h - 1);
      turn();
    }
  }
  if (request.indexOf("/j2") != -1) {
    Serial.println("2");
    if (h < 2)
      {junction(2 - h);}
    else
    {
      turn();
      junction(h - 2);
      turn();
    }
  }
  if (request.indexOf("/j3") != -1) {
    Serial.println("3");
    junction(3 - h);
  }
 if (request.indexOf("/return") != -1) {
    stopb();
  }
  client.println("HTTP://192.168.43.171");
  client.println("Content-Type: text/html");
  client.println(""); //  do not forget this one
  client.println("<!DOCTYPE HTML>");
  client.println("<html>");
  client.println("<br><br>");
  client.println("<a href=\"/j1\"\"><button>Junction 1 </button></a>");
  client.println("<a href=\"/j2\"\"><button>Junction 2 </button></a>");
  client.println("<a href=\"/j3\"\"><button>Junction 3 </button></a>");
  client.println("<a href=\"/return\"\"><button>Return </button></a><br />");    
  client.println("</html>");
 
  delay(1);
  Serial.println("Client disonnected");
  Serial.println("");
}

void junction(int n)
{ Serial.println("entered the junction..");
int c = 0;
int a = 0;
  while (c != n+1)
  {Serial.println(c);
    
    while(digitalRead(ir1) == LOW && digitalRead(ir3) == LOW && digitalRead(ir2) == LOW)
     {//Serial.println("a=1");
      a = 1;
      forward();
      delay(200);
     }
    while (digitalRead(ir1) == HIGH && digitalRead(ir3) == HIGH  )
    {
      if (a==1)
      {++c; a=0;}
     // Serial.println("a==0");
      forward();
    }
    while (digitalRead(ir1) == HIGH && digitalRead(ir3) == HIGH && digitalRead(ir2) == HIGH)
    {
      forward();
      }
    while (digitalRead(ir1) == HIGH && digitalRead(ir3) == LOW && digitalRead(ir2) == LOW)
    {
      right();
    }
    while (digitalRead(ir1) == LOW && digitalRead(ir3) == HIGH && digitalRead(ir2) == LOW)
    {
      left();
    }
   }
    stopb();
    h = n;
  return;
}

void turn()
{
  right();
  delay(1000);
  while (!(digitalRead(ir1) == LOW && digitalRead(ir3) == LOW && digitalRead(ir2) == HIGH))
  right();
}

void forward()
{
  digitalWrite(m1a, HIGH);
  digitalWrite(m2a, HIGH);
  digitalWrite(m1b, LOW);
  digitalWrite(m2b, LOW);
  delay(200);
}

void right()
{
  digitalWrite(m1a, LOW);
  digitalWrite(m2a, HIGH);
  digitalWrite(m1b, HIGH);
  digitalWrite(m2b, LOW);
  delay(100);
}

void left()
{
  digitalWrite(m1a, HIGH);
  digitalWrite(m2a, LOW);
  digitalWrite(m1b, LOW);
  digitalWrite(m2b, LOW);
  delay(100);
}

void back()
{
  digitalWrite(m1a, LOW);
  digitalWrite(m2a, LOW);
  digitalWrite(m1b, HIGH);
  digitalWrite(m2b, HIGH);
  delay(100);
}

void stopb()
{
  digitalWrite(m1a, LOW);
  digitalWrite(m2a, LOW);
  digitalWrite(m1b, LOW);
  digitalWrite(m2b, LOW);
  delay(1000);

}
